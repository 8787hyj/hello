package com.epbooks.www.member.controller;

import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.epbooks.www.member.service.AuthInfo;
import com.epbooks.www.member.service.MemberService;

@Controller
@RequestMapping("/login") // 루트 밑에 login으로 들어오는 요청은 이 컨트롤러가 처리함
public class MemberLoginController {
	private static final Logger logger = LoggerFactory.getLogger(MemberLoginController.class);
	
	@Autowired
	private MemberService memberService;

	
	@GetMapping //get방식으로 들어왔을때 처리하는 메소드 - loginForm을 보여준다.
	public String loginForm() {
		return "/member/loginForm";
	}
	
	@PostMapping //post방식으로 들어왔을때 처리하는 메소드 
	// form에서 입력받은 값으로, db의 데이터와 비교하여 에러가 없으면 세션에 멤버의 정보를 담아서 main으로 보낸다
	public String submit(@RequestParam("memberid")String memberid, @RequestParam("password")String password, HttpSession session) {
//		System.out.println(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>");
//		System.out.println(">>>>>>>>>>>>>>>>>>>>>>>> controller: " + memberid);
//		System.out.println(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>");
			AuthInfo authInfo = memberService.selectMemberById(memberid, password);
			session.setAttribute("authInfo", authInfo);
		return "epbooksMain";
	}
	
}
