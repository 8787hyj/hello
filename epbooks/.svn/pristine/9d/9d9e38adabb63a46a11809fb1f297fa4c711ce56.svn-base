package com.epbooks.www.book.service.impl;

import java.util.ArrayList;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.epbooks.www.book.dto.Book;
import com.epbooks.www.book.dto.BookList;
import com.epbooks.www.book.dto.BookListCategory;
import com.epbooks.www.book.service.BookService;
import com.epbooks.www.cart.service.impl.CartServiceImpl;
import com.epbooks.www.member.service.impl.MemberDao;

@Service
@Transactional
public class BookServiceImpl implements BookService{

	private static final Logger logger = LoggerFactory.getLogger(BookServiceImpl.class);
	
	@Autowired
	BookDao bookdao;
	
	@Autowired
	private BookService bookservice;

	@Override
	public Book selectBookById(String isbn) {
		Book book=bookdao.selectBookById(isbn);
//		logger.info("serviceImpl bookisbn>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"+book.getISBN());
//		logger.info("serviceImpl bookisbn>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"+book.getTitle());
//		logger.info("serviceImpl bookisbn>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"+book.getPricesales());
//		logger.info("serviceImpl bookisbn>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"+book.getDesciption());
//		logger.info("serviceImpl bookisbn>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"+book.getAuthor());
//		logger.info("serviceImpl bookisbn>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"+book.getCategory());
//		logger.info("serviceImpl bookisbn>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"+book.getPublisher());
//		logger.info("serviceImpl bookisbn>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"+book.getISBN());
		if(book==null) {
			logger.info("book null");
		}
		if(!book.matchISBN(isbn)) {
			System.out.println("isbn not match");
		}
		return new Book(book.getISBN(), book.getTitle(), book.getPricesales(), book.getDesciption(), book.getBookAmount(), book.getAuthor(), book.getCategory(), book.getPublisher());
	}

	@Override
	public List<Book> selectBookAll() {
		List<Book> list=bookdao.selectBookAll();
		if(list==null) {
			System.out.println("list is null");
		}
		return list;
	}
	
	@Override
	public int selectCount() {
		
		int bookCount=0;
//		try {
//		logger.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>sdfsdfsdsdsdfsdf");
		bookCount=bookdao.selectCount();
//		logger.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"+bookCount);
		
		
//		if(bookCount==0) {
//			System.out.println("bookCount is 0");
//		}
//		if (bookCount>0) {
//			return bookCount;
		//return bookCount;
//		}
//		}catch(NullPointerException e) {
//			e.printStackTrace();
//		}
		if(bookCount==0) {
			System.out.println("bookCount is null222");
		}
		return bookCount;
		
	}

	@Override
	public List<Book> selectBookCount(int startrow, int size) {
//		System.out.println("book Count return");
		List<Book> result = new ArrayList<Book>();
		result=bookdao.selectBookCount(startrow, size);
		if(result==null) {
			System.out.println("result null");
		}
//		System.out.println("result null");
		
		return result;
	}

	@Override
	public BookListCategory getBookPage(int pageNum) {

		int result=0;
		int size = 10;
		List<Book> content=null;
		
//		System.out.println("pageCount");
//		System.out.println("pageNum: "+pageNum);
		result = bookservice.selectCount();
//		logger.info("bookpage result>>>>>>>>>>>>>>>>>>>>>>>>>>>>"+result);
		if(result==0) {
			System.out.println("bookListPageService result null");
		}
//		System.out.println("pageCount22222");
		
//		logger.info("pageNum>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"+pageNum);

		content=selectBookCount((pageNum - 1)* size , size);
//		logger.info("content>>>>>>>>>>>>>>>>>>>>>"+content);
		if(content==null) {
			System.out.println("bookListPageService content null");
		}
		
//		logger.info("bookpage result>>>>>>>>>>>>>>>>>>>>>>>>>>>>"+result);
//		logger.info("pageNum>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"+pageNum);
//		logger.info("size>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"+size);
//		logger.info("content>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"+content);
		
		
		return new BookListCategory(result, pageNum, size, content);
	}

	@Override
	public BookListCategory getBookPageByCategory(int pageNo, String category) {
		int result=0;
		int size = 10;
		List<Book> content=null;
		
		result = selectCountByCategory(category);

		if(result==0) {
			System.out.println("bookListPageService result null");
		}

		content=selectBookCountByCategory((pageNo - 1)* size , size,category);

		if(content==null) {
			System.out.println("bookListPageService content null");
		}

		
		
		return new BookListCategory(result, pageNo, size, content);
	}

	private List<Book> selectBookCountByCategory(int startrow, int size, String category) {
		List<Book> result = new ArrayList<Book>();
		result=bookdao.selectBookCountByCategory(startrow, size,category);
		if(result==null) {
			System.out.println("result null");
		}
		
		return result;
	}

	@Override
	public int selectCountByCategory(String category) {
		int bookCount=0;

		bookCount=bookdao.selectCountByCategory(category);

		if(bookCount==0) {
			System.out.println("bookCount is null222");
		}
		return bookCount;
	}


	
}
