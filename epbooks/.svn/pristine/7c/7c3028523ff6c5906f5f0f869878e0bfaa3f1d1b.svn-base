package com.epbooks.www.member.dao;


import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.epbooks.www.member.dto.Member;
import com.epbooks.www.member.service.AuthInfo;
import com.epbooks.www.member.service.MemberRegisterRequest;
import com.epbooks.www.member.service.MemberService;
import com.epbooks.www.member.service.WrongIdPasswordException;

@Service
public class MemberServiceImpl implements MemberService{
	
	private static final Logger logger = LoggerFactory.getLogger(MemberServiceImpl.class);
	
	@Autowired
	MemberDao memberDao;
	
	
// 로그인시 form에서 받은 아이디와 비밀번호를 매개변수로 받는다.
// 아이디로 멤버를 조회하고, 조회된 결과로 멤버객체를 생성한다.
// null 체크와, form에서 받은 비밀번호랑 생성한 멤버(DB에 저장된 정보)를 비교하여 비밀번호가 일치하는지 체크한다.
// 에러가 없으면  AuthInfo 커맨드 객체에 필요한 정보를 담아서 반환한다.
	@Override
	public AuthInfo selectMemberById(String memberid, String password) {
//		System.out.println(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>");
//		System.out.println(">>>>>>>>>>>>>>>>>>>>>>>> service: " + memberid);
//		System.out.println(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>");
		List<Member> list = memberDao.selectMemberById(memberid);
		if(list == null)
			throw new WrongIdPasswordException();
		if(!list.get(0).matchPassword(password)) // matchPassword 메소드는 Member DTO에 있다.
			throw new WrongIdPasswordException();
		
		return new AuthInfo(list.get(0).getMemberid(), list.get(0).getEmail(), list.get(0).getName());
	}


	@Override
	public void registerMember(MemberRegisterRequest memberRegisterRequest) {
		Member member = new Member(memberRegisterRequest.getMemberID(),
				memberRegisterRequest.getPassword(),
				memberRegisterRequest.getName(),
				memberRegisterRequest.getEmail(),
				memberRegisterRequest.getPhone());
		logger.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>" + member);
		memberDao.registerMember(member);
		
				
	}
}
//sqlxml 에서 keyproperty = 오토인크리 먼트하는 키 컬럼 이름 넣어주고 , usegeneratedkeys = true 하면, 오토인크리먼트 컬럼 안 넣어줘도 됨.
		// parameter type = Member 라고 넣어주면 #{memeberid} , #{name} 등등 써도 알아서 memeber.memberid 처럼 값 가져감. (멤버객체 매개변수로 던져주면됨)
		// id가 sora인 회원이 있나? 정도로 true false만 알면 될때는 resultype = boolean 하고, select exists(sql문) 이런식으로 작성하면됨.
