package com.epbooks.www.article.controller;

import java.util.List;

import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.epbooks.www.article.dto.Article;
import com.epbooks.www.article.dto.ArticleContent;
import com.epbooks.www.article.service.ArticleCommand;
import com.epbooks.www.article.service.ArticleService;
import com.epbooks.www.article.service.impl.ArticleDao;
import com.epbooks.www.member.dto.Member;
import com.epbooks.www.member.service.AuthInfo;

import javafx.scene.control.Alert;

@Controller
@RequestMapping("/article")
public class ArticleController {
	
	private static final Logger logger = LoggerFactory.getLogger(ArticleController.class);
	
	@Autowired
	private ArticleService articleService;
	
	@GetMapping("/form")
	public String articleForm(Model model) {
		List<Article> list = articleService.selectArticleAll();
		model.addAttribute("articles",list);
		return "/article/articlelistForm";
	}
	
	//write작성하기form
	@GetMapping("/write")
	public String articleWrtieForm() {
		return "/article/articlewriteForm";
	}
	
	@PostMapping("/articlewritedo")
	public String articleWrite(HttpSession session,@RequestParam String title,@RequestParam String content) {
		AuthInfo user = (AuthInfo) session.getAttribute("authInfo");
		logger.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"+user.getMemberId());
		logger.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"+title);
		if(user==null) {
			return "redirect:/";
		}
		Article article = new Article(user.getMemberId(), title);
		ArticleContent articleContent = new ArticleContent(article.getArticleno(), content);
		articleService.writeArticle(article);
		articleService.writeArticleContent(articleContent);
		return "redirect:/article/form";
	}
	
	
	  @GetMapping("/read") 
	  public String read(@RequestParam int articleno) {
		return "/article/articlereadForm";
		}
	 
	
	
}
